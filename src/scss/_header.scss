// Container widths that products can modify

/// Left primary zone width
/// @type {Number}
$o-techdocs-header-primary-left-width: (default: 244px, M: 303px) !default;

/// Left secondary zone width
/// @type {Number}
$o-techdocs-header-secondary-left-width: 150px !default;

/// Primary featured zone width
/// @type {Number}
$o-techdocs-header-primary-featured-width: 160px !default;

/// Breakpoint at which the header layout changes significantly
$o-techdocs-header-breakpoint: M !default;

.o-techdocs-header {
	min-height: 55px;
	max-height: 125px;
	background: oColorsGetColorFor(o-techdocs-header, background);
	// Workaround so the brand colour goes to full width in XL screens
	background-image: linear-gradient(to bottom, transparent 50px, oColorsGetColorFor(o-techdocs-header-product-brand product-brand, background) 20px);
	// Prevents flashes of text in Safari when items are hovered and opacity varies
	-webkit-font-smoothing: antialiased;

	a {
		text-decoration: none;
	}
	[aria-hidden=true] {
		display: none;
	}
}

.o-techdocs-header--tall {
	@include _oTechdocsHeaderBreakpoint {
		min-height: 85px;
		background-image: linear-gradient(to bottom, transparent 80px, oColorsGetColorFor(o-techdocs-header-product-brand product-brand, background) 20px);
	}
}

// Container for primary and secondary that sets the width of these using o-grid
.o-techdocs-header__container {
	@include oGridContainer;
	position: relative;
	color: oColorsGetColorFor(o-techdocs-header-item, text);

	a {
		color: oColorsGetColorFor(o-techdocs-header-item, text);

		&:focus,
		&:hover {
			color: oColorsGetColorFor(o-techdocs-header-item, text);
			opacity: 0.7;
		}
	}

	// We need mega-dropdowns to also have the same gutters as the container
	.o-hierarchical-nav__mega-dropdown {
		right: oGridGutter();
		left: oGridGutter();
		width: auto;

		@include _oTechdocsHeaderBreakpoint {
			right: oGridGutter($o-techdocs-header-breakpoint);
			left: oGridGutter($o-techdocs-header-breakpoint);
		}
	}

	// Give a minimum width to submenus
	[data-o-hierarchical-nav-level] {
		min-width: 100%;
		box-sizing: border-box;
	}

	// Ensure passing from normal to expanded state
	// doesn't change the width of the menu
	.o-hierarchical-nav__parent__right-arrow,
	.o-hierarchical-nav__parent__down-arrow {
		box-sizing: border-box;
		width: 16px;
		text-align: right;
		padding-right: 6px;
		line-height: 16px;
	}
}

// Alternative to the FT masthead
.o-techdocs-header__title {
	display: inline-block;
	margin: 0;
	padding: 0;
	font-weight: normal;
	font-size: 20px;
	line-height: 40px;
	white-space: nowrap;
	vertical-align: top;

	@include _oTechdocsHeaderBreakpoint {
		font-size: 24px;

		.o-techdocs-header--tall & {
			line-height: 60px;
		}
	}
}

// Default tagline styling
.o-techdocs-header__tagline {
	font-weight: normal;
	margin: 0;
	white-space: nowrap;
	// Default behaviour for when there's not enough space because we don't know the
	// width of the tagline
	text-overflow: ellipsis;
	overflow: hidden;
}

// Primary container
.o-techdocs-header__primary {
	display: table;
	table-layout: fixed;
	width: 100%;
	height: 50px;

	// Adapted tagline style for primary container
	.o-techdocs-header__tagline {
		font-size: 16px;
		line-height: 50px;
		margin-left: oGridGutter();
		margin-right: oGridGutter() * 2;
		text-align: right;
	}

	.o-techdocs-header--tall & {
		@include _oTechdocsHeaderBreakpoint {
			height: 80px;

			.o-techdocs-header__tagline {
				line-height: 80px;
			}
		}
	}
}

// Inner containers for the primary container
.o-techdocs-header__primary__left,
.o-techdocs-header__primary__center,
.o-techdocs-header__primary__right,
.o-techdocs-header__primary__featured,
.o-techdocs-header__secondary__left,
.o-techdocs-header__secondary__right {
	display: table-cell;
	vertical-align: middle;
}
.o-techdocs-header__primary__left {
	@if type-of($o-techdocs-header-primary-left-width) == map {
		@each $layout-name, $header-primary-left-width in $o-techdocs-header-primary-left-width {
			@if $layout-name == default {
				width: $header-primary-left-width;
			} @else {
				@include oGridRespondTo($layout-name) {
					width: $header-primary-left-width;
				}
			}
			@if $layout-name == $o-grid-fixed-layout {
				@include oGridTargetIE8 {
					width: $header-primary-left-width;
				}
			}
		}
	}
	@if type-of($o-techdocs-header-primary-left-width) == number {
		width: $o-techdocs-header-primary-left-width;
	}
}
.o-techdocs-header__primary__right {
	position: relative;
	right: oGridGutter() * -1;

	@include _oTechdocsHeaderBreakpoint {
		right: 0;
	}
}
.o-techdocs-header__primary__featured {
	// scss-lint:disable DeclarationOrder
	display: none;
	padding-left: oGridGutter();

	img {
		border: 0;
	}

	@include _oTechdocsHeaderBreakpoint {
		display: table-cell;
		padding-left: oGridGutter($o-techdocs-header-breakpoint);
	}

	@if type-of($o-techdocs-header-primary-featured-width) == map {
		@each $layout-name, $header-primary-featured-width in $o-techdocs-header-primary-featured-width {
			@if $layout-name == default {
				width: $header-primary-featured-width;
			} @else {
				@include oGridRespondTo($layout-name) {
					width: $header-primary-featured-width;
				}
			}
			@if $layout-name == $o-grid-fixed-layout {
				@include oGridTargetIE8 {
					width: $header-primary-featured-width;
				}
			}
		}
	}
	@if type-of($o-techdocs-header-primary-featured-width) == number {
		width: $o-techdocs-header-primary-featured-width;
	}
}

// Secondary container
.o-techdocs-header__secondary {
	background-color: oColorsGetColorFor(o-techdocs-header-product-brand product-brand, background);
	display: table;
	table-layout: fixed;
	width: 100%;
	// Force a minimum 5px height for an empty secondary element
	height: 5px;
	max-height: 25px;

	// Adapted tagline for secondary container
	.o-techdocs-header__tagline {
		font-size: 14px;
		line-height: 25px;
	}
}

// Inner containers for the secondary container
.o-techdocs-header__secondary__left {
	@if type-of($o-techdocs-header-secondary-left-width) == map {
		@each $layout-name, $header-secondary-left-width in $o-techdocs-header-secondary-left-width {
			@if $layout-name == default {
				width: $header-secondary-left-width;
			} @else {
				@include oGridRespondTo($layout-name) {
					width: $header-secondary-left-width;
				}
			}
			@if $layout-name == $o-grid-fixed-layout {
				@include oGridTargetIE8 {
					width: $header-secondary-left-width;
				}
			}
		}
	}
	@if type-of($o-techdocs-header-secondary-left-width) == number {
		width: $o-techdocs-header-secondary-left-width;
	}
}
